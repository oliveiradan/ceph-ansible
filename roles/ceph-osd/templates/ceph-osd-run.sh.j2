#!/bin/bash
# {{ ansible_managed }}

#############
# VARIABLES #
#############

DISK_PATH=/dev/disk/by-partuuid/
MAPPER=/dev/mapper


#############
# FUNCTIONS #
#############

function get_luks_part_uuid {
  blkid -t TYPE=crypto_LUKS -o value -s PARTUUID "${@}"
}

function get_lockbox_part_uuid {
  blkid -t PARTLABEL="ceph lockbox" -o value -s PARTUUID "${1}"
}

function is_dmcrypt {
  [[ "$(get_luks_part_uuid /dev/${1}* | wc -l)" -gt 0 ]]
}


########
# MAIN #
########

if is_dmcrypt "${1}"; then
  for part in /dev/${1}*; do
    if [[ "$(get_luks_part_uuid ${part} | wc -l)" -gt 0 ]]; then
DEVICES="${DEVICES} --device=$DISK_PATH/$(get_luks_part_uuid ${part}) "
    fi
  done

  # We test if the dm exists, if it does we add it to --device list
  # The first activation will fail because the encrypted device is not open yet.
  # During the first activation, ceph-disk will open it and then the dm will be created.
  # On the second run it'll be added to the device list, so the second run will succeed
  get_luks_part_uuid /dev/${1}1

  # Make sure blkid returns 0 otherwise we will test /dev/mapper/ which always exists
  if [[ -e /dev/mapper/$(get_luks_part_uuid /dev/${1}1) ]] && [[ "$?" -eq 0 ]]; then
    DEVICES="${DEVICES} --device=$DISK_PATH/$(get_lockbox_part_uuid /dev/${1}3) --device=/dev/${1}3 --device=$MAPPER/control --device=$MAPPER/$(get_luks_part_uuid /dev/${1}2) --device=$MAPPER/$(get_luks_part_uuid /dev/${1}1)"
  else
    DEVICES="${DEVICES} --device=$DISK_PATH/$(get_lockbox_part_uuid /dev/${1}3) --device=/dev/${1}3 --device=$MAPPER/control --device=$MAPPER/$(get_luks_part_uuid /dev/${1}2)"
  fi
fi

/usr/bin/docker run \
  --rm \
  --net=host \
  --cap-add SYS_ADMIN \
  {% if ansible_distribution == 'Ubuntu' -%}
  --security-opt apparmor:unconfined \
  {% endif -%}
  --pid=host \
  {% if not containerized_deployment_with_kv -%}
  -v /var/lib/ceph:/var/lib/ceph \
  -v /etc/ceph:/etc/ceph \
  {% else -%}
  -e KV_TYPE={{kv_type}} \
  -e KV_IP={{kv_endpoint}} \
  -e KV_PORT={{kv_port}} \
  {% endif -%}
  -v /etc/localtime:/etc/localtime:ro \
  --device=/dev/${1} \
  --device=/dev/${1}1 \
  {% if raw_journal_devices|length > 0 -%}
  -e OSD_JOURNAL={{ raw_journal_devices[0] }} \
  --device={{ raw_journal_devices[0] }} \
  {% else -%}
  --device=/dev/${1}2 \
  {% endif -%}
  --device=$DISK_PATH/$(python -c "import uuid; f = open('/etc/machine-id', 'r').read(); print uuid.uuid5(uuid.NAMESPACE_DNS, f.strip() + '/dev/$1')") ${DEVICES} \
  -e CEPH_DAEMON=OSD_CEPH_DISK_ACTIVATE \
  -e OSD_DEVICE=/dev/${1} \
  {{ ceph_osd_docker_extra_env }} \
  --name=ceph-osd-{{ ansible_hostname }}-dev${1} \
  {{ ceph_docker_registry }}/{{ ceph_docker_image }}:{{ ceph_docker_image_tag }}
